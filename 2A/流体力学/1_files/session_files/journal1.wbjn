# encoding: utf-8
# 2019 R2
SetScriptVersion(Version="19.4.159")
template1 = GetTemplate(
    TemplateName="Fluid Flow",
    Solver="CFX")
system1 = template1.CreateSystem()
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Import(
    FilePath="C:/Users/12506/OneDrive/Desktop/T_pipe.msh",
    MeshType="FLUENT")
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.Edit()
setup1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = -2.8871e-06, 0, 0.149225
    Scale = 2.19862
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
FLOW: Flow Analysis 1
&replace   DOMAIN: Default Domain
    Coord Frame = Coord 0
    Domain Type = Fluid
    Location = fluid
    BOUNDARY: Default Domain Default
      Boundary Type = WALL
      Create Other Side = Off
      Interface Boundary = Off
      Location = inlet y,inlet z,outlet,wall fluid
      BOUNDARY CONDITIONS: 
        MASS AND MOMENTUM: 
          Option = No Slip Wall
        END # MASS AND MOMENTUM:
        WALL ROUGHNESS: 
          Option = Smooth Wall
        END # WALL ROUGHNESS:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:Default Domain Default
    DOMAIN MODELS: 
      BUOYANCY MODEL: 
        Option = Non Buoyant
      END # BUOYANCY MODEL:
      DOMAIN MOTION: 
        Option = Stationary
      END # DOMAIN MOTION:
      MESH DEFORMATION: 
        Option = None
      END # MESH DEFORMATION:
      REFERENCE PRESSURE: 
        Reference Pressure = 1 [atm]
      END # REFERENCE PRESSURE:
    END # DOMAIN MODELS:
    FLUID DEFINITION: Fluid 1
      Material = Water
      Option = Material Library
      MORPHOLOGY: 
        Option = Continuous Fluid
      END # MORPHOLOGY:
    END # FLUID DEFINITION:Fluid 1
    FLUID MODELS: 
      COMBUSTION MODEL: 
        Option = None
      END # COMBUSTION MODEL:
      HEAT TRANSFER MODEL: 
        Fluid Temperature = 25 [C]
        Option = Isothermal
      END # HEAT TRANSFER MODEL:
      THERMAL RADIATION MODEL: 
        Option = None
      END # THERMAL RADIATION MODEL:
      TURBULENCE MODEL: 
        Option = Laminar
      END # TURBULENCE MODEL:
    END # FLUID MODELS:
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0466263, -0.299099, 0.0591121
    Scale = 1.99184
    Pan = 0.0491516, -0.306144
    Rotation Quaternion = 0.18688, -0.520458, -0.107217, 0.826253
    
  END

END

> update
FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: Boundary 1
      Boundary Type = OUTLET
      Interface Boundary = Off
      Location = inlet y
      BOUNDARY CONDITIONS: 
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Mass Flow Rate = 10 [kg s^-1]
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:Boundary 1
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Exit()
setup1.SendCommand(Command=">delete /FLOW:Flow Analysis 1/DOMAIN:Default Domain/BOUNDARY:Default Domain Default")
setup1.SendCommand(Command=">delete /FLOW:Flow Analysis 1/DOMAIN:Default Domain/BOUNDARY:Boundary 1")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: entree y
      Boundary Type = INLET
      Interface Boundary = Off
      Location = inlet y
      BOUNDARY CONDITIONS: 
        FLOW DIRECTION: 
          Option = Normal to Boundary Condition
        END # FLOW DIRECTION:
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Mass Flow Rate = 10 [kg s^-1]
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:entree y
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: entree z
      Boundary Type = INLET
      Interface Boundary = Off
      Location = inlet z
      BOUNDARY CONDITIONS: 
        FLOW DIRECTION: 
          Option = Normal to Boundary Condition
        END # FLOW DIRECTION:
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Mass Flow Rate = 10 [kg s^-1]
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:entree z
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: entree z
      Boundary Type = INLET
      Interface Boundary = Off
      Location = inlet z
      BOUNDARY CONDITIONS: 
        FLOW DIRECTION: 
          Option = Normal to Boundary Condition
        END # FLOW DIRECTION:
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Mass Flow Rate = 10 [kg s^-1]
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:entree z
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: outlet
      Boundary Type = OUTLET
      Interface Boundary = Off
      Location = outlet
      BOUNDARY CONDITIONS: 
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Mass Flow Rate = 20 [kg s^-1]
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:outlet
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
setup1.SendCommand(Command="""FLOW: Flow Analysis 1
  DOMAIN: Default Domain
&replace     BOUNDARY: outlet
      Boundary Type = OUTLET
      Interface Boundary = Off
      Location = outlet
      BOUNDARY CONDITIONS: 
        FLOW REGIME: 
          Option = Subsonic
        END # FLOW REGIME:
        MASS AND MOMENTUM: 
          Mass Flow Rate = 20 [kg s^-1]
          Mass Flow Rate Area = As Specified
          Option = Mass Flow Rate
        END # MASS AND MOMENTUM:
      END # BOUNDARY CONDITIONS:
    END # BOUNDARY:outlet
  END # DOMAIN:Default Domain
END # FLOW:Flow Analysis 1


PARAMETERIZATION:
END""")
Save(Overwrite=True)
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\12506\OneDrive\Desktop\1_files\dp0\CFX\CFX\Fluid Flow CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 1
        Start Method = Serial
      END
    END
  END
END
""")
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Update(Force=True)
solution1.SetExecutionControl(CCL=r"""&replace SIMULATION CONTROL:
  EXECUTION CONTROL:
    EXECUTABLE SELECTION:
      Double Precision = Off
      Large Problem = Off
    END
    INTERPOLATOR STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
    END
    PARTITIONER STEP CONTROL:
      Multidomain Option = Automatic
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARTITION SMOOTHING:
        Maximum Partition Smoothing Sweeps = 100
        Option = Smooth
      END
      PARTITIONING TYPE:
        MeTiS Type = k-way
        Option = MeTiS
        Partition Size Rule = Automatic
      END
    END
    RUN DEFINITION:
      Run Mode = Full
      Solver Input File = C:\Users\12506\OneDrive\Desktop\1_files\dp0\CFX\CFX\Fluid Flow CFX.def
    END
    SOLVER STEP CONTROL:
      Runtime Priority = Standard
      MEMORY CONTROL:
        Memory Allocation Factor = 1.0
      END
      PARALLEL ENVIRONMENT:
        Number of Processes = 1
        Start Method = Serial
      END
    END
  END
END
""")
solutionComponent1.Update(Force=True)
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case CFX/BOUNDARY:Default Domain Default, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case CFX/BOUNDARY:entree y, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case CFX/BOUNDARY:entree z, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case CFX/BOUNDARY:outlet, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/DEFAULT LEGEND:Default Legend View 1, view=VIEW:View 1")
results1.SendCommand(Command="> autolegend plot=/WIREFRAME:Wireframe, view=VIEW:View 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DATA READER/CASE:Case CFX/BOUNDARY:Default Domain Default, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DATA READER/CASE:Case CFX/BOUNDARY:entree y, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DATA READER/CASE:Case CFX/BOUNDARY:entree z, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DATA READER/CASE:Case CFX/BOUNDARY:outlet, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DEFAULT LEGEND:Default Legend View 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /WIREFRAME:Wireframe, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /WIREFRAME:Wireframe, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DEFAULT LEGEND:Default Legend View 1, view=/VIEW:View 1""")
solution1.Exit()
results1.Exit()
Save(Overwrite=True)
